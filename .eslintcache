[{"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\index.js":"1","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\reportWebVitals.js":"2","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\App.js":"3","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Layout.js":"4","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\MainNavigation.js":"5","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\Welcome.js":"6","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\ComparePlayers.js":"7","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\BuildTeam.js":"8","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\SearchPlayer.js":"9","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Card.js":"10","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\firebase\\firebase.config.js":"11","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\store\\index.js":"12","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\features.js":"13","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\Features.js":"14","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\PlayersList.js":"15","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\searchBar\\SearchBar.js":"16","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Footer.js":"17","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\DisplayStats.js":"18","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\modals\\PlayerStatsModal.js":"19","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\BuildTeamPlayers.js":"20","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Lineup.js":"21","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\AddPlayerCard.js":"22","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Rotation.js":"23","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bench.js":"24","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bullpen.js":"25","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\PlayerCard.js":"26","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\ResetBtn.js":"27","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamAverages\\TeamAverages.js":"28"},{"size":385,"mtime":1635541217014,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1550,"mtime":1638385399727,"results":"32","hashOfConfig":"30"},{"size":263,"mtime":1631305465669,"results":"33","hashOfConfig":"30"},{"size":1183,"mtime":1635965248956,"results":"34","hashOfConfig":"30"},{"size":1004,"mtime":1635524912526,"results":"35","hashOfConfig":"30"},{"size":753,"mtime":1636823027636,"results":"36","hashOfConfig":"30"},{"size":4150,"mtime":1638387725023,"results":"37","hashOfConfig":"30"},{"size":6082,"mtime":1638387757243,"results":"38","hashOfConfig":"30"},{"size":204,"mtime":1635292211864,"results":"39","hashOfConfig":"30"},{"size":727,"mtime":1631904864698,"results":"40","hashOfConfig":"30"},{"size":4023,"mtime":1638385276694,"results":"41","hashOfConfig":"30"},{"size":435,"mtime":1633137601851,"results":"42","hashOfConfig":"30"},{"size":760,"mtime":1633198411695,"results":"43","hashOfConfig":"30"},{"size":2261,"mtime":1638324027563,"results":"44","hashOfConfig":"30"},{"size":7382,"mtime":1638307518937,"results":"45","hashOfConfig":"30"},{"size":379,"mtime":1635525661355,"results":"46","hashOfConfig":"30"},{"size":3454,"mtime":1638324508973,"results":"47","hashOfConfig":"30"},{"size":937,"mtime":1635616730363,"results":"48","hashOfConfig":"30"},{"size":2457,"mtime":1636824541652,"results":"49","hashOfConfig":"30"},{"size":2715,"mtime":1637004682261,"results":"50","hashOfConfig":"30"},{"size":3973,"mtime":1636938819136,"results":"51","hashOfConfig":"30"},{"size":2666,"mtime":1636934743702,"results":"52","hashOfConfig":"30"},{"size":2685,"mtime":1637005580197,"results":"53","hashOfConfig":"30"},{"size":2615,"mtime":1637006511591,"results":"54","hashOfConfig":"30"},{"size":195,"mtime":1636410595141,"results":"55","hashOfConfig":"30"},{"size":265,"mtime":1636583274347,"results":"56","hashOfConfig":"30"},{"size":6566,"mtime":1636825187114,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1qkq2x0",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"60"},"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\index.js",[],["126","127"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\reportWebVitals.js",[],["128","129"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\App.js",["130","131","132","133","134"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Layout.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\MainNavigation.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\Welcome.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\ComparePlayers.js",["135"],"import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../components/layout/Card\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ComparePlayers = () => {\r\n  const counter = useSelector((state) => state.counter);\r\n  // const [number, setNumber] = useState(counter);\r\n  const dispatch = useDispatch();\r\n\r\n  const increaseCounter = () => {\r\n    dispatch({ type: \"increase\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(counter);\r\n    // setNumber(counter);\r\n  }, [counter]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card></Card>\r\n      <h1>Page to compare players</h1>\r\n      <button onClick={increaseCounter}>Increase</button>\r\n      {counter}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ComparePlayers;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\BuildTeam.js",["136","137"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\SearchPlayer.js",["138","139","140","141","142","143","144","145","146"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Card.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\firebase\\firebase.config.js",["147"],"// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDbasau3ZQW7QM2ySN4f26dA7jxvXODJ-o\",\r\n  authDomain: \"mlbshowapp.firebaseapp.com\",\r\n  projectId: \"mlbshowapp\",\r\n  storageBucket: \"mlbshowapp.appspot.com\",\r\n  messagingSenderId: \"914571557168\",\r\n  appId: \"1:914571557168:web:8d6aaa0d14fe1772b070f5\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default getFirestore();\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\store\\index.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\features.js",["148","149","150"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\Features.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\PlayersList.js",["151"],"import React, { Fragment } from \"react\";\r\nimport DisplayStats from \"./displayStats/DisplayStats\";\r\nimport classes from \"./styles/PlayersList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst PlayersList = (props) => {\r\n  const modalOpen = useSelector((state) => state.modalState);\r\n  const selectedPlayer = useSelector((state) => state.selectedPlayer);\r\n  const dispatch = useDispatch();\r\n\r\n  const openModal = () => {\r\n    dispatch({ type: \"openModal\" });\r\n  };\r\n\r\n  const clickedPlayer = (player) => {\r\n    dispatch({ type: \"selectedPlayer\", selectedPlayer: player });\r\n  };\r\n\r\n  const onPlayerClick = (player) => {\r\n    openModal();\r\n    clickedPlayer(player);\r\n  };\r\n\r\n  let content;\r\n\r\n  if (props.type === \"click\") {\r\n    content = (\r\n      <div className={classes.grid}>\r\n        {props.players.map((player) => (\r\n          <div\r\n            className={classes.playerCard}\r\n            key={player.id}\r\n            onClick={onPlayerClick.bind(this, player)}\r\n          >\r\n            <div className={`flex-c ${player.rating} ${classes.rating}`}>\r\n              {player.overall}\r\n            </div>\r\n            <div>{player.name}</div>\r\n          </div>\r\n        ))}\r\n        {modalOpen && <DisplayStats player={selectedPlayer} />}\r\n      </div>\r\n    );\r\n  } else if (props.type === \"double\") {\r\n    content = (\r\n      <div className={classes.grid}>\r\n        {props.players.map((player) => (\r\n          <div\r\n            className={classes.playerCard}\r\n            key={player.id}\r\n            onDoubleClick={onPlayerClick.bind(this, player)}\r\n            onClick={clickedPlayer.bind(this, player)}\r\n          >\r\n            <div className={`flex-c ${player.rating} ${classes.rating}`}>\r\n              {player.overall}\r\n            </div>\r\n            <div>{player.name}</div>\r\n          </div>\r\n        ))}\r\n        {modalOpen && <DisplayStats player={selectedPlayer} />}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.contentContainer}>\r\n      {props.players.length > 0 ? (\r\n        content\r\n      ) : (\r\n        <div className={`flex-c`}>\r\n          <p className={classes.noContent}>Search For Players To Select From</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayersList;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\searchBar\\SearchBar.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Footer.js",["152"],"import React from \"react\";\r\nimport classes from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <a\r\n        className={classes.content}\r\n        href=\"https://github.com/JeremiahFailla\"\r\n        target=\"_blank\"\r\n      >\r\n        &copy; Jeremiah Failla 2021\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\DisplayStats.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\modals\\PlayerStatsModal.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\BuildTeamPlayers.js",["153","154"],"import React, { useState } from \"react\";\r\nimport classes from \"./BuildTeamPlayers.module.css\";\r\nimport Lineup from \"./Lineup\";\r\nimport Rotation from \"./Rotation\";\r\nimport Bench from \"./Bench\";\r\nimport Bullpen from \"./Bullpen\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TeamAverages from \"../teamAverages/TeamAverages\";\r\n\r\nconst BuildTeamPlayers = () => {\r\n  const [showLineup, setShowLineup] = useState(true);\r\n  const [showRotation, setShowRotation] = useState(true);\r\n  // const player = useSelector((state) => state.selectedPlayer);\r\n  const activeClasses = `${classes.btn} ${classes.active}`;\r\n  const inactiveClasses = `${classes.btn} ${classes.inactive}`;\r\n\r\n  const onShowLineupBtnHandler = () => {\r\n    setShowLineup(true);\r\n  };\r\n\r\n  const onShowBenchBtnHandler = () => {\r\n    setShowLineup(false);\r\n  };\r\n\r\n  const onShowRotationBtnHandler = () => {\r\n    setShowRotation(true);\r\n  };\r\n\r\n  const onShowBullpenBtnHandler = () => {\r\n    setShowRotation(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <TeamAverages />\r\n      <div className={classes.btnContainer}>\r\n        <div className={classes.positionPlayersBtnCont}>\r\n          <button\r\n            className={showLineup ? activeClasses : inactiveClasses}\r\n            onClick={onShowLineupBtnHandler}\r\n          >\r\n            Lineup\r\n          </button>\r\n          <button\r\n            className={!showLineup ? activeClasses : inactiveClasses}\r\n            onClick={onShowBenchBtnHandler}\r\n          >\r\n            Bench\r\n          </button>\r\n        </div>\r\n        <div className={classes.pitcherPlayersBtnCont}>\r\n          <button\r\n            className={showRotation ? activeClasses : inactiveClasses}\r\n            onClick={onShowRotationBtnHandler}\r\n          >\r\n            Rotation\r\n          </button>\r\n          <button\r\n            className={!showRotation ? activeClasses : inactiveClasses}\r\n            onClick={onShowBullpenBtnHandler}\r\n          >\r\n            Bullpen\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={classes.starters}>\r\n        <div className={classes.positionPlayers}>\r\n          {showLineup && <Lineup />}\r\n          {!showLineup && <Bench />}\r\n        </div>\r\n        <div className={classes.pitcherPlayers}>\r\n          {showRotation && <Rotation />}\r\n          {!showRotation && <Bullpen />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildTeamPlayers;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Lineup.js",["155","156","157","158"],"import React, { useEffect, useState } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Lineup.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Lineup = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const startingLineup = useSelector((state) => state.lineup);\r\n  const bench = useSelector((state) => state.bench);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Starting Lineup Changed\");\r\n  }, [startingLineup]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToLineup = (i, player, showErrorFunc) => {\r\n    // check to see if player is already in either lineup or on bench\r\n    let invalid = startingLineup.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = bench.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      showErrorFunc(\"Player is all ready lineup or on bench\");\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToLineup\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetLineupHandler = () => {\r\n    dispatch({ type: \"resetLineup\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerOnTeam = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapLineupPositions = (player, position) => {\r\n    console.log(\"Swap Lineup Postions\");\r\n    dispatch({\r\n      type: \"swapPlayersInLineup\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.animation}`}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Lineup</p>\r\n        <ResetBtn resetFunc={onResetLineupHandler}>Reset Lineup</ResetBtn>\r\n      </div>\r\n\r\n      {startingLineup.map((el, i) => (\r\n        <div className={`flex-c`}>\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={Math.random()}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToLineup}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerOnTeam}\r\n            swapPosition={swapLineupPositions}\r\n            positionPlayer={true}\r\n            positionAllowed=\"c,1b,2b,3b,ss,lf,cf,rf\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Lineup;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\AddPlayerCard.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Rotation.js",["159","160","161","162","163"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Rotation.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Rotation = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const startingRotation = useSelector((state) => state.rotation);\r\n  const bullpen = useSelector((state) => state.bullpen);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Rotation Component Rerendered\");\r\n  }, [startingRotation]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToRotation = (i, player) => {\r\n    let invalid = startingRotation.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = bullpen.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      console.log(\"Player is all ready rotation or in bullpen\");\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: \"addPlayerToRotation\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetRotationHandler = () => {\r\n    dispatch({ type: \"resetRotation\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerInRotation = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapRotationPositions = (player, position) => {\r\n    console.log(\"Swap Rotation Positions\");\r\n    dispatch({\r\n      type: \"swapPlayersInRotation\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Rotation</p>\r\n        <ResetBtn resetFunc={onResetRotationHandler}>Reset Rotation</ResetBtn>\r\n      </div>\r\n\r\n      {startingRotation.map((el, i) => (\r\n        <div className=\"flex-c\">\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToRotation}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerInRotation}\r\n            swapPosition={swapRotationPositions}\r\n            positionPlayer={false}\r\n            positionAllowed=\"sp\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Rotation;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bench.js",["164","165","166"],"import React, { useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Bench.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Bench = React.memo(() => {\r\n  const startingLineup = useSelector((state) => state.lineup);\r\n  const startingBench = useSelector((state) => state.bench);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(\"Bench has changed\");\r\n  }, [startingBench]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToBench = (i, player, showErrorFunc) => {\r\n    // check to see if player is already in either lineup or on bench\r\n    let invalid = startingLineup.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = startingBench.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      showErrorFunc(\"Player is all ready lineup or on bench\");\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToBench\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetBenchHandler = () => {\r\n    dispatch({ type: \"resetBench\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerOnTeam = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapBenchPositions = (player, position) => {\r\n    console.log(\"Swap Bench Postions\");\r\n    dispatch({\r\n      type: \"swapPlayersOnBench\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Bench</p>\r\n        <ResetBtn resetFunc={onResetBenchHandler}>Reset Bench</ResetBtn>\r\n      </div>\r\n      {startingBench.map((el, i) => (\r\n        <div className=\"flex-c\" key={i}>\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToBench}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerOnTeam}\r\n            swapPosition={swapBenchPositions}\r\n            positionPlayer={true}\r\n            positionAllowed=\"c,1b,2b,3b,ss,lf,cf,rf\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bench;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bullpen.js",["167","168","169"],"import React, { useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Bullpen.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Bullpen = () => {\r\n  const dispatch = useDispatch();\r\n  const startingBullpen = useSelector((state) => state.bullpen);\r\n  const startingRotation = useSelector((state) => state.rotation);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Bullpen has changed\");\r\n  }, [startingBullpen]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToBullpen = (i, player) => {\r\n    let invalid = startingRotation.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = startingBullpen.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n    if (invalid) {\r\n      console.log(\"Player is all ready rotation or in bullpen\");\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToBullpen\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetBullpenHandler = () => {\r\n    dispatch({ type: \"resetBullpen\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerInBullpen = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapBullpenPositions = (player, position) => {\r\n    console.log(\"Swap Bullpen Positions\");\r\n    dispatch({\r\n      type: \"swapPlayersInBullpen\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Bullpen</p>\r\n        <ResetBtn resetFunc={onResetBullpenHandler}>Reset Bullpen</ResetBtn>\r\n      </div>\r\n\r\n      {startingBullpen.map((el, i) => (\r\n        <div className=\"flex-c\">\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            linePosition={i}\r\n            addPlayer={addPlayerToBullpen}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerInBullpen}\r\n            swapPosition={swapBullpenPositions}\r\n            positionPlayer={false}\r\n            positionAllowed=\"rp\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bullpen;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\PlayerCard.js",["170","171"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\ResetBtn.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamAverages\\TeamAverages.js",["172","173","174"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport classes from \"./TeamAverages.module.css\";\r\n\r\nconst TeamAverages = () => {\r\n  const [toggleHitting, setToggleHitting] = useState(true);\r\n  const [positionPlayerAverages, setPositionPlayerAverages] = useState({});\r\n  const [pitchingPlayerAverages, setPitchingPlayerAverages] = useState({});\r\n  const lineup = useSelector((state) => state.lineup);\r\n  const rotation = useSelector((state) => state.rotation);\r\n  const bench = useSelector((state) => state.bench);\r\n  const bullpen = useSelector((state) => state.bullpen);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Averages Component Rerender\");\r\n    if (toggleHitting) {\r\n      calcHittingAverages();\r\n    } else {\r\n      calcPitchingAverages();\r\n    }\r\n  }, [lineup, rotation, bench, bullpen, toggleHitting]);\r\n\r\n  const calcHittingAverages = () => {\r\n    let contact = 0,\r\n      power = 0,\r\n      speed = 0,\r\n      fielding = 0,\r\n      positionPlayerCount = 0;\r\n    lineup.forEach((player) => {\r\n      if (player !== undefined) {\r\n        positionPlayerCount++;\r\n\r\n        const contactLeft = player.conL;\r\n        const contactRight = player.conR;\r\n        contact += (contactLeft + contactRight) / 2;\r\n\r\n        const powerLeft = player.pwrL;\r\n        const powerRight = player.pwrR;\r\n        power += (powerLeft + powerRight) / 2;\r\n\r\n        speed += player.spd;\r\n        fielding += player.fld;\r\n      }\r\n    });\r\n    bench.forEach((player) => {\r\n      if (player !== undefined) {\r\n        positionPlayerCount++;\r\n        const contactLeft = player.conL;\r\n        const contactRight = player.conR;\r\n        contact += (contactLeft + contactRight) / 2;\r\n\r\n        const powerLeft = player.pwrL;\r\n        const powerRight = player.pwrR;\r\n        power += (powerLeft + powerRight) / 2;\r\n\r\n        speed += player.spd;\r\n        fielding += player.fld;\r\n      }\r\n    });\r\n    contact = contact / positionPlayerCount;\r\n    power = power / positionPlayerCount;\r\n    speed = speed / positionPlayerCount;\r\n    fielding = fielding / positionPlayerCount;\r\n    setPositionPlayerAverages({\r\n      contact: contact,\r\n      power: power,\r\n      speed: speed,\r\n      fielding: fielding,\r\n    });\r\n  };\r\n\r\n  const calcPitchingAverages = () => {\r\n    let hPerNine = 0,\r\n      wPerNine = 0,\r\n      kPerNine = 0,\r\n      velocity = 0,\r\n      pitcherPlayerCount = 0;\r\n    rotation.forEach((player) => {\r\n      if (player !== undefined) {\r\n        pitcherPlayerCount++;\r\n        hPerNine += player.hPerNine;\r\n        wPerNine += player.wPerNine;\r\n        kPerNine += player.kPerNine;\r\n        velocity += player.vel;\r\n      }\r\n    });\r\n    bullpen.forEach((player) => {\r\n      if (player !== undefined) {\r\n        pitcherPlayerCount++;\r\n        hPerNine += player.hPerNine;\r\n        wPerNine += player.wPerNine;\r\n        kPerNine += player.kPerNine;\r\n        velocity += player.vel;\r\n      }\r\n    });\r\n    hPerNine = hPerNine / pitcherPlayerCount;\r\n    wPerNine = wPerNine / pitcherPlayerCount;\r\n    kPerNine = kPerNine / pitcherPlayerCount;\r\n    velocity = velocity / pitcherPlayerCount;\r\n    setPitchingPlayerAverages({\r\n      hPerNine: hPerNine,\r\n      wPerNine: wPerNine,\r\n      kPerNine: kPerNine,\r\n      velocity: velocity,\r\n    });\r\n  };\r\n\r\n  const onToggleTeamAveragesHandler = () => {\r\n    console.log(\"Toggle\");\r\n    setToggleHitting(!toggleHitting);\r\n  };\r\n\r\n  let content;\r\n  if (toggleHitting) {\r\n    content = (\r\n      <React.Fragment>\r\n        <div className=\"flex-c\">\r\n          <div>\r\n            <span className={classes.wording}>Contact</span>\r\n            <span className={classes.stat}>\r\n              {positionPlayerAverages.contact\r\n                ? positionPlayerAverages.contact.toFixed(0)\r\n                : 0}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className={classes.wording}>Power</span>\r\n            <span className={classes.stat}>\r\n              {positionPlayerAverages.power\r\n                ? positionPlayerAverages.power.toFixed(0)\r\n                : 0}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className={classes.wording}>Speed</span>\r\n            <span className={classes.stat}>\r\n              {positionPlayerAverages.speed\r\n                ? positionPlayerAverages.speed.toFixed(0)\r\n                : 0}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className={classes.wording}>Fielding</span>\r\n            <span className={classes.stat}>\r\n              {positionPlayerAverages.fielding\r\n                ? positionPlayerAverages.fielding.toFixed(0)\r\n                : 0}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    content = (\r\n      <React.Fragment>\r\n        <div className=\"flex-c\">\r\n          <div>\r\n            <span className={classes.wording}>H/9</span>\r\n            <span className={classes.stat}>\r\n              {pitchingPlayerAverages.hPerNine\r\n                ? pitchingPlayerAverages.hPerNine.toFixed(0)\r\n                : 0}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className={classes.wording}>W/9</span>\r\n            <span className={classes.stat}>\r\n              {pitchingPlayerAverages.wPerNine\r\n                ? pitchingPlayerAverages.wPerNine.toFixed(0)\r\n                : 0}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className={classes.wording}>K/9</span>\r\n            <span className={classes.stat}>\r\n              {pitchingPlayerAverages.kPerNine\r\n                ? pitchingPlayerAverages.kPerNine.toFixed(0)\r\n                : 0}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <span className={classes.wording}>Velocity</span>\r\n            <span className={classes.stat}>\r\n              {pitchingPlayerAverages.velocity\r\n                ? pitchingPlayerAverages.velocity.toFixed(0)\r\n                : 0}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`flex-col ${classes.averagesContainer}`}>\r\n      <span className={classes.title}>\r\n        Team {toggleHitting ? \"Hitting\" : \"Pitching\"} Averages\r\n      </span>\r\n      <button className={classes.btn} onClick={onToggleTeamAveragesHandler}>\r\n        {toggleHitting ? \"Show Pitching Averages\" : \"Show Hitting Averages\"}\r\n      </button>\r\n      <div className={`flex-col ${classes.contentContainer}`}>{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamAverages;\r\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"177","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":11,"column":3,"nodeType":"183","messageId":"184","endLine":11,"endColumn":13},{"ruleId":"181","severity":1,"message":"185","line":13,"column":3,"nodeType":"183","messageId":"184","endLine":13,"endColumn":8},{"ruleId":"181","severity":1,"message":"186","line":14,"column":3,"nodeType":"183","messageId":"184","endLine":14,"endColumn":8},{"ruleId":"181","severity":1,"message":"187","line":18,"column":10,"nodeType":"183","messageId":"184","endLine":18,"endColumn":21},{"ruleId":"188","severity":1,"message":"189","line":36,"column":6,"nodeType":"190","endLine":36,"endColumn":8,"suggestions":"191"},{"ruleId":"181","severity":1,"message":"192","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"193","line":67,"column":10,"nodeType":"183","messageId":"184","endLine":67,"endColumn":25},{"ruleId":"188","severity":1,"message":"194","line":72,"column":6,"nodeType":"190","endLine":72,"endColumn":8,"suggestions":"195"},{"ruleId":"181","severity":1,"message":"182","line":2,"column":3,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"196","line":3,"column":3,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"185","line":4,"column":3,"nodeType":"183","messageId":"184","endLine":4,"endColumn":8},{"ruleId":"181","severity":1,"message":"186","line":5,"column":3,"nodeType":"183","messageId":"184","endLine":5,"endColumn":8},{"ruleId":"181","severity":1,"message":"197","line":6,"column":3,"nodeType":"183","messageId":"184","endLine":6,"endColumn":10},{"ruleId":"181","severity":1,"message":"198","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":10},{"ruleId":"181","severity":1,"message":"199","line":11,"column":23,"nodeType":"183","messageId":"184","endLine":11,"endColumn":34},{"ruleId":"181","severity":1,"message":"200","line":24,"column":7,"nodeType":"183","messageId":"184","endLine":24,"endColumn":12},{"ruleId":"188","severity":1,"message":"194","line":58,"column":6,"nodeType":"190","endLine":58,"endColumn":8,"suggestions":"201"},{"ruleId":"181","severity":1,"message":"202","line":18,"column":7,"nodeType":"183","messageId":"184","endLine":18,"endColumn":10},{"ruleId":"203","severity":2,"message":"204","line":9,"column":10,"nodeType":"205","messageId":"206","endLine":9,"endColumn":14},{"ruleId":"203","severity":2,"message":"204","line":10,"column":10,"nodeType":"205","messageId":"206","endLine":10,"endColumn":14},{"ruleId":"203","severity":2,"message":"204","line":11,"column":10,"nodeType":"205","messageId":"206","endLine":11,"endColumn":14},{"ruleId":"181","severity":1,"message":"207","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"209","line":7,"column":7,"nodeType":"210","messageId":"211","endLine":11,"endColumn":8,"fix":"212"},{"ruleId":"181","severity":1,"message":"187","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":21},{"ruleId":"181","severity":1,"message":"199","line":7,"column":23,"nodeType":"183","messageId":"184","endLine":7,"endColumn":34},{"ruleId":"181","severity":1,"message":"192","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"188","severity":1,"message":"213","line":20,"column":6,"nodeType":"190","endLine":20,"endColumn":8,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":25,"column":29,"nodeType":"217","messageId":"218","endLine":25,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":30,"column":31,"nodeType":"217","messageId":"218","endLine":30,"endColumn":38},{"ruleId":"181","severity":1,"message":"207","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"192","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":35},{"ruleId":"188","severity":1,"message":"213","line":20,"column":6,"nodeType":"190","endLine":20,"endColumn":8,"suggestions":"219"},{"ruleId":"215","severity":1,"message":"216","line":24,"column":29,"nodeType":"217","messageId":"218","endLine":24,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":29,"column":31,"nodeType":"217","messageId":"218","endLine":29,"endColumn":38},{"ruleId":"188","severity":1,"message":"213","line":20,"column":6,"nodeType":"190","endLine":20,"endColumn":8,"suggestions":"220"},{"ruleId":"215","severity":1,"message":"216","line":25,"column":29,"nodeType":"217","messageId":"218","endLine":25,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":30,"column":31,"nodeType":"217","messageId":"218","endLine":30,"endColumn":38},{"ruleId":"188","severity":1,"message":"213","line":20,"column":6,"nodeType":"190","endLine":20,"endColumn":8,"suggestions":"221"},{"ruleId":"215","severity":1,"message":"216","line":24,"column":29,"nodeType":"217","messageId":"218","endLine":24,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":29,"column":31,"nodeType":"217","messageId":"218","endLine":29,"endColumn":38},{"ruleId":"181","severity":1,"message":"187","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":21},{"ruleId":"181","severity":1,"message":"199","line":2,"column":23,"nodeType":"183","messageId":"184","endLine":2,"endColumn":34},{"ruleId":"181","severity":1,"message":"222","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":38},{"ruleId":"181","severity":1,"message":"199","line":2,"column":23,"nodeType":"183","messageId":"184","endLine":2,"endColumn":34},{"ruleId":"188","severity":1,"message":"223","line":21,"column":6,"nodeType":"190","endLine":21,"endColumn":55,"suggestions":"224"},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],["225"],["226"],"no-unused-vars","'onSnapshot' is defined but never used.","Identifier","unusedVar","'query' is defined but never used.","'where' is defined but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["227"],"'useState' is defined but never used.","'searchedPlayers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'players'. Either include it or remove the dependency array.",["228"],"'collection' is defined but never used.","'getDocs' is defined but never used.","'db' is defined but never used.","'useDispatch' is defined but never used.","'names' is assigned a value but never used.",["229"],"'app' is assigned a value but never used.","react/jsx-no-undef","'Link' is not defined.","JSXIdentifier","undefined","'Fragment' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"230","text":"231"},"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["232"],"array-callback-return","Array.prototype.some() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["233"],["234"],["235"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'calcHittingAverages' and 'calcPitchingAverages'. Either include them or remove the dependency array.",["236"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"239","fix":"241"},[271,271]," rel=\"noreferrer\"",{"desc":"242","fix":"243"},{"desc":"242","fix":"244"},{"desc":"242","fix":"245"},{"desc":"242","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [getData]",{"range":"249","text":"250"},"Update the dependencies array to be: [players]",{"range":"251","text":"252"},{"range":"253","text":"252"},"Update the dependencies array to be: [dispatch]",{"range":"254","text":"255"},{"range":"256","text":"255"},{"range":"257","text":"255"},{"range":"258","text":"255"},"Update the dependencies array to be: [lineup, rotation, bench, bullpen, toggleHitting, calcHittingAverages, calcPitchingAverages]",{"range":"259","text":"260"},[1055,1057],"[getData]",[1564,1566],"[players]",[1387,1389],[626,628],"[dispatch]",[656,658],[615,617],[620,622],[833,882],"[lineup, rotation, bench, bullpen, toggleHitting, calcHittingAverages, calcPitchingAverages]"]