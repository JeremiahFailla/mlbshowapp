[{"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\index.js":"1","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\reportWebVitals.js":"2","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\App.js":"3","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Layout.js":"4","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\MainNavigation.js":"5","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\Welcome.js":"6","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\ComparePlayers.js":"7","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\BuildTeam.js":"8","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\SearchPlayer.js":"9","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Card.js":"10","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\firebase\\firebase.config.js":"11","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\store\\index.js":"12","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\features.js":"13","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\Features.js":"14","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\PlayersList.js":"15","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\searchBar\\SearchBar.js":"16","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Footer.js":"17","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\DisplayStats.js":"18","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\modals\\PlayerStatsModal.js":"19","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\BuildTeamPlayers.js":"20","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Lineup.js":"21","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\AddPlayerCard.js":"22","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Rotation.js":"23","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bench.js":"24","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bullpen.js":"25","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\PlayerCard.js":"26","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\ResetBtn.js":"27","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamAverages\\TeamAverages.js":"28","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\PositionPlayerStats.js":"29","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\PitcherPlayerStats.js":"30","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\comparePlayers\\PlayerComparison.js":"31","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\comparePlayers\\Player.js":"32","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\data\\data.js":"33","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\errorMessage\\ErrorMessageBar.js":"34"},{"size":385,"mtime":1635541217014,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":1501,"mtime":1640629851049,"results":"38","hashOfConfig":"36"},{"size":354,"mtime":1639156050228,"results":"39","hashOfConfig":"36"},{"size":2817,"mtime":1640145355992,"results":"40","hashOfConfig":"36"},{"size":1043,"mtime":1639154179694,"results":"41","hashOfConfig":"36"},{"size":3043,"mtime":1639174120634,"results":"42","hashOfConfig":"36"},{"size":3333,"mtime":1639173075341,"results":"43","hashOfConfig":"36"},{"size":5451,"mtime":1639173214178,"results":"44","hashOfConfig":"36"},{"size":204,"mtime":1635292211864,"results":"45","hashOfConfig":"36"},{"size":727,"mtime":1631904864698,"results":"46","hashOfConfig":"36"},{"size":4005,"mtime":1639164255939,"results":"47","hashOfConfig":"36"},{"size":435,"mtime":1633137601851,"results":"48","hashOfConfig":"36"},{"size":760,"mtime":1633198411695,"results":"49","hashOfConfig":"36"},{"size":5701,"mtime":1640287679920,"results":"50","hashOfConfig":"36"},{"size":9397,"mtime":1640287064490,"results":"51","hashOfConfig":"36"},{"size":373,"mtime":1642027278859,"results":"52","hashOfConfig":"36"},{"size":4491,"mtime":1640628098000,"results":"53","hashOfConfig":"36"},{"size":1017,"mtime":1642026319212,"results":"54","hashOfConfig":"36"},{"size":2390,"mtime":1638469845301,"results":"55","hashOfConfig":"36"},{"size":2757,"mtime":1639162775206,"results":"56","hashOfConfig":"36"},{"size":3018,"mtime":1639163088562,"results":"57","hashOfConfig":"36"},{"size":2731,"mtime":1639173181952,"results":"58","hashOfConfig":"36"},{"size":2742,"mtime":1639162789350,"results":"59","hashOfConfig":"36"},{"size":2519,"mtime":1639164095013,"results":"60","hashOfConfig":"36"},{"size":195,"mtime":1636410595141,"results":"61","hashOfConfig":"36"},{"size":265,"mtime":1636583274347,"results":"62","hashOfConfig":"36"},{"size":7170,"mtime":1640632101692,"results":"63","hashOfConfig":"36"},{"size":1002,"mtime":1642026992029,"results":"64","hashOfConfig":"36"},{"size":1565,"mtime":1638472817828,"results":"65","hashOfConfig":"36"},{"size":5746,"mtime":1640637626121,"results":"66","hashOfConfig":"36"},{"size":19423,"mtime":1640640461476,"results":"67","hashOfConfig":"36"},{"size":10711,"mtime":1639165566191,"results":"68","hashOfConfig":"36"},{"size":852,"mtime":1639161361675,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qkq2x0",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\index.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\reportWebVitals.js",[],["151","152"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\App.js",["153"],"import Layout from \"./components/layout/Layout\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Welcome from \"./pages/Welcome\";\nimport ComparePlayers from \"./pages/ComparePlayers\";\nimport BuildTeam from \"./pages/BuildTeam\";\nimport SearchPlayer from \"./pages/SearchPlayer\";\nimport classes from \"./App.module.css\";\nimport React, { useEffect } from \"react\";\n\nimport { collection, getDocs } from \"@firebase/firestore\";\nimport db from \"./firebase/firebase.config\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const getData = async () => {\n    const players = [];\n    const querySnapshot = await getDocs(collection(db, \"players\"));\n    querySnapshot.forEach((player) => {\n      // doc.data() is never undefined for query doc snapshots\n      players.push(player.data());\n    });\n    dispatch({ type: \"insertFirebasePlayers\", players: players });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <Layout>\n        <div className={classes.app}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Welcome />\n            </Route>\n            <Route path=\"/build-team\">\n              <BuildTeam />\n            </Route>\n            <Route path=\"/compare-players\">\n              <ComparePlayers />\n            </Route>\n            <Route path=\"/search-players\">\n              <SearchPlayer />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Layout.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\MainNavigation.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\Welcome.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\ComparePlayers.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\BuildTeam.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\SearchPlayer.js",["154"],"// import {\r\n//   onSnapshot,\r\n//   collection,\r\n//   query,\r\n//   where,\r\n//   getDocs,\r\n// } from \"@firebase/firestore\";\r\n// import db from \"./../firebase/firebase.config\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"../components/layout/Card\";\r\nimport { useSelector } from \"react-redux\";\r\nimport classes from \"./pageStyles/SearchPlayers.module.css\";\r\nimport Features from \"../components/Features\";\r\nimport PlayersList from \"../components/PlayersList\";\r\nimport SearchBar from \"../components/searchBar/SearchBar\";\r\nimport Footer from \"../components/layout/Footer\";\r\n// import names from \"./../data/data\";\r\n\r\nconst SearchPlayer = () => {\r\n  const [searchedPlayers, setSearchedPlayers] = useState([]);\r\n  const players = useSelector((state) => state.players);\r\n\r\n  // const getData = async (player) => {\r\n  //   if (true) return;\r\n  //   const playersList = [];\r\n  //   console.log(player);\r\n\r\n  //   const playersRef = collection(db, \"players\");\r\n  //   // Create a query against the collection.\r\n  //   // let q = query(playersRef, where(\"name\", \">=\", player.name));\r\n  //   let q;\r\n  //   if (\r\n  //     player.league !== \"Both\" &&\r\n  //     player.division !== \"All\" &&\r\n  //     player.team !== \"All\"\r\n  //   ) {\r\n  //     console.log(\"Query 1\");\r\n  //     q = query(\r\n  //       playersRef,\r\n  //       where(\r\n  //         \"nameContains\",\r\n  //         \"array-contains\",\r\n  //         player.name.toLowerCase().trim()\r\n  //       ),\r\n  //       where(\"league\", \"==\", player.league),\r\n  //       where(\"division\", \"==\", player.division),\r\n  //       where(\"team\", \"==\", player.team)\r\n  //     );\r\n  //   } else if (\r\n  //     player.league !== \"Both\" &&\r\n  //     player.division !== \"All\" &&\r\n  //     player.team === \"All\"\r\n  //   ) {\r\n  //     console.log(\"Query 2\");\r\n  //     q = query(\r\n  //       playersRef,\r\n  //       where(\r\n  //         \"nameContains\",\r\n  //         \"array-contains\",\r\n  //         player.name.toLowerCase().trim()\r\n  //       ),\r\n  //       where(\"league\", \"==\", player.league),\r\n  //       where(\"division\", \"==\", player.division)\r\n  //     );\r\n  //   } else if (\r\n  //     player.league !== \"Both\" &&\r\n  //     player.division === \"All\" &&\r\n  //     player.team === \"All\"\r\n  //   ) {\r\n  //     console.log(\"Query 3\");\r\n  //     q = query(\r\n  //       playersRef,\r\n  //       where(\r\n  //         \"nameContains\",\r\n  //         \"array-contains\",\r\n  //         player.name.toLowerCase().trim()\r\n  //       ),\r\n  //       where(\"league\", \"==\", player.league)\r\n  //     );\r\n  //   } else if (player.league === \"Both\") {\r\n  //     console.log(\"Query 4\");\r\n  //     q = query(\r\n  //       playersRef,\r\n  //       where(\r\n  //         \"nameContains\",\r\n  //         \"array-contains\",\r\n  //         player.name.toLowerCase().trim()\r\n  //       )\r\n  //     );\r\n  //   }\r\n\r\n  //   const querySnapshot = await getDocs(q);\r\n  //   querySnapshot.forEach((doc) => {\r\n  //     // doc.data() is never undefined for query doc snapshots\r\n  //     console.log(doc.id, \" => \", doc.data());\r\n  //     playersList.push(doc.data());\r\n  //   });\r\n  //   setPlayers([...playersList]);\r\n  // };\r\n\r\n  const getData = (player) => {\r\n    const playersList = [];\r\n    console.log(player);\r\n\r\n    if (\r\n      player.league !== \"Both\" &&\r\n      player.division !== \"All\" &&\r\n      player.team !== \"All\"\r\n    ) {\r\n      console.log(\"Query 1\");\r\n      players.forEach((pl) => {\r\n        if (\r\n          pl.league === player.league &&\r\n          pl.division === player.division &&\r\n          pl.team === player.team &&\r\n          pl.name.toLowerCase().includes(player.name.toLowerCase().trim())\r\n        ) {\r\n          playersList.push(pl);\r\n        }\r\n      });\r\n    } else if (\r\n      player.league !== \"Both\" &&\r\n      player.division !== \"All\" &&\r\n      player.team === \"All\"\r\n    ) {\r\n      console.log(\"Query 2\");\r\n      players.forEach((pl) => {\r\n        if (\r\n          pl.league === player.league &&\r\n          pl.division === player.division &&\r\n          pl.name.toLowerCase().includes(player.name.toLowerCase().trim())\r\n        ) {\r\n          playersList.push(pl);\r\n        }\r\n      });\r\n    } else if (\r\n      player.league !== \"Both\" &&\r\n      player.division === \"All\" &&\r\n      player.team === \"All\"\r\n    ) {\r\n      console.log(\"Query 3\");\r\n      players.forEach((pl) => {\r\n        if (\r\n          pl.league === player.league &&\r\n          pl.name.toLowerCase().includes(player.name.toLowerCase().trim())\r\n        ) {\r\n          playersList.push(pl);\r\n        }\r\n      });\r\n    } else if (player.league === \"Both\") {\r\n      console.log(\"Query 4\");\r\n      players.forEach((pl) => {\r\n        if (pl.name.toLowerCase().includes(player.name.toLowerCase().trim())) {\r\n          playersList.push(pl);\r\n        }\r\n      });\r\n    }\r\n    console.log(playersList);\r\n    setSearchedPlayers([...playersList]);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <SearchBar searchFunc={getData} />\r\n      </Card>\r\n      <div className={classes.body}>\r\n        <div className={classes.title}>\r\n          <h1>Search For Your Favorite Players</h1>\r\n        </div>\r\n        <div className={classes.description}>\r\n          <p>Use this tool to search for any player on an active MLB roster</p>\r\n        </div>\r\n        <PlayersList players={searchedPlayers} type=\"click\" />\r\n\r\n        <Features page=\"search\" />\r\n        <Footer />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPlayer;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Card.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\firebase\\firebase.config.js",["155"],"// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDbasau3ZQW7QM2ySN4f26dA7jxvXODJ-o\",\r\n  authDomain: \"mlbshowapp.firebaseapp.com\",\r\n  projectId: \"mlbshowapp\",\r\n  storageBucket: \"mlbshowapp.appspot.com\",\r\n  messagingSenderId: \"914571557168\",\r\n  appId: \"1:914571557168:web:8d6aaa0d14fe1772b070f5\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default getFirestore();\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\store\\index.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\features.js",["156","157","158"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\Features.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\PlayersList.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\searchBar\\SearchBar.js",["159"],"import React, { useState, useEffect } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport classes from \"./SearchBar.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchPlayer, setSearchPlayer] = useState({\r\n    name: \"\",\r\n    league: \"Both\",\r\n    division: \"All\",\r\n    team: \"All\",\r\n  });\r\n  const [league, setLeague] = useState(\"Both\");\r\n  const [division, setDivision] = useState(\"All\");\r\n  const [divisionToggle, setDivisionToggle] = useState(true);\r\n  const [name, setName] = useState(\"\");\r\n  const [player, setPlayer] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      player.name === searchPlayer.name &&\r\n      player.league === searchPlayer.league &&\r\n      player.division === searchPlayer.division &&\r\n      player.team === searchPlayer.team\r\n    ) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Search Results Are Already Below\",\r\n      });\r\n      return;\r\n    }\r\n    if (!searchPlayer.name) {\r\n      dispatch({ type: \"errorMessage\", message: \"Enter a Name\" });\r\n      return;\r\n    }\r\n    console.log(\"Finding player\");\r\n    setPlayer(searchPlayer);\r\n    props.searchFunc(searchPlayer);\r\n  };\r\n\r\n  const onLeagueHandler = (e) => {\r\n    if (e.target.value === \"AL\" || e.target.value === \"NL\") {\r\n      setLeague(e.target.value);\r\n      setDivisionToggle(false);\r\n      setSearchPlayer((prev) => {\r\n        return {\r\n          ...prev,\r\n          league: e.target.value,\r\n          team: \"All\",\r\n        };\r\n      });\r\n    } else {\r\n      setSearchPlayer((prev) => {\r\n        return {\r\n          ...prev,\r\n          league: e.target.value,\r\n          division: \"All\",\r\n          team: \"All\",\r\n        };\r\n      });\r\n      setDivisionToggle(true);\r\n      setDivision(\"All\");\r\n    }\r\n  };\r\n\r\n  const onDivisionChangeHandler = (e) => {\r\n    setDivision(e.target.value);\r\n    setSearchPlayer((prev) => {\r\n      return {\r\n        ...prev,\r\n        division: e.target.value,\r\n        team: \"All\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const onTeamChangeHandler = (e) => {\r\n    setSearchPlayer((prev) => {\r\n      return {\r\n        ...prev,\r\n        team: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onNameChangeHandler = (e) => {\r\n    setSearchPlayer((prev) => {\r\n      setName(e.target.value);\r\n      return {\r\n        ...prev,\r\n        name: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  let visibleTeams;\r\n\r\n  if (division === \"All\") {\r\n    visibleTeams = (\r\n      <div className={`flex-col ${classes.mobileFullWidth}`}>\r\n        <span className={`${classes.teamSpan} ${classes.disabled}`}>Team</span>\r\n        <select name=\"teams\" id=\"teams\" className={classes.teams} disabled>\r\n          <option value=\"All\">All</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (division === \"east\" && league === \"AL\") {\r\n    visibleTeams = (\r\n      <div className={`flex-col ${classes.mobileFullWidth}`}>\r\n        <span className={`${classes.teamSpan}`}>Team</span>\r\n        <select\r\n          name=\"teams\"\r\n          id=\"teams\"\r\n          className={classes.teams}\r\n          onChange={onTeamChangeHandler}\r\n        >\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Orioles\">Orioles</option>\r\n          <option value=\"Red Sox\">Red Sox</option>\r\n          <option value=\"Blue Jays\">Blue Jays</option>\r\n          <option value=\"Rays\">Rays</option>\r\n          <option value=\"Yankees\">Yankees</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (division === \"central\" && league === \"AL\") {\r\n    visibleTeams = (\r\n      <div className=\"flex-col\">\r\n        <span className={`${classes.teamSpan}`}>Team</span>\r\n        <select\r\n          name=\"teams\"\r\n          id=\"teams\"\r\n          className={classes.teams}\r\n          onChange={onTeamChangeHandler}\r\n        >\r\n          <option value=\"All\">All</option>\r\n          <option value=\"White Sox\">White Sox</option>\r\n          <option value=\"Royals\">Royals</option>\r\n          <option value=\"Indians\">Indians</option>\r\n          <option value=\"Twins\">Twins</option>\r\n          <option value=\"Tigers\">Tigers</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (division === \"west\" && league === \"AL\") {\r\n    visibleTeams = (\r\n      <div className=\"flex-col\">\r\n        <span className={`${classes.teamSpan}`}>Team</span>\r\n        <select\r\n          name=\"teams\"\r\n          id=\"teams\"\r\n          className={classes.teams}\r\n          onChange={onTeamChangeHandler}\r\n        >\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Angels\">Angels</option>\r\n          <option value=\"Athletics\">Athletics</option>\r\n          <option value=\"Rangers\">Rangers</option>\r\n          <option value=\"Mariners\">Mariners</option>\r\n          <option value=\"Astros\">Astros</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (division === \"east\" && league === \"NL\") {\r\n    visibleTeams = (\r\n      <div className=\"flex-col\">\r\n        <span className={`${classes.teamSpan}`}>Team</span>\r\n        <select\r\n          name=\"teams\"\r\n          id=\"teams\"\r\n          className={classes.teams}\r\n          onChange={onTeamChangeHandler}\r\n        >\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Nationals\">Nationals</option>\r\n          <option value=\"Marlins\">Marlins</option>\r\n          <option value=\"Mets\">Mets</option>\r\n          <option value=\"Phillies\">Phillies</option>\r\n          <option value=\"Braves\">Braves</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (division === \"central\" && league === \"NL\") {\r\n    visibleTeams = (\r\n      <div className=\"flex-col\">\r\n        <span className={`${classes.teamSpan}`}>Team</span>\r\n        <select\r\n          name=\"teams\"\r\n          id=\"teams\"\r\n          className={classes.teams}\r\n          onChange={onTeamChangeHandler}\r\n        >\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Cubs\">Cubs</option>\r\n          <option value=\"Brewers\">Brewers</option>\r\n          <option value=\"Cardinals\">Cardinals</option>\r\n          <option value=\"Reds\">Reds</option>\r\n          <option value=\"Pirates\">Pirates</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (division === \"west\" && league === \"NL\") {\r\n    visibleTeams = (\r\n      <div className=\"flex-col\">\r\n        <span className={`${classes.teamSpan}`}>Team</span>\r\n        <select\r\n          name=\"teams\"\r\n          id=\"teams\"\r\n          className={classes.teams}\r\n          onChange={onTeamChangeHandler}\r\n        >\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Dodgers\">Dodgers</option>\r\n          <option value=\"Diamondbacks\">Diamondbacks</option>\r\n          <option value=\"Giants\">Giants</option>\r\n          <option value=\"Rockies\">Rockies</option>\r\n          <option value=\"Padres\">Padres</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form className={`${classes.form} flex-c`} onSubmit={onSubmitHandler}>\r\n      <button\r\n        type=\"submit\"\r\n        className={`${classes.submit} ${classes.mobileHide}`}\r\n      >\r\n        <FaSearch className={classes.searchIcon} />\r\n      </button>\r\n      <div className=\"flex-col\">\r\n        <span className={classes.nameSpan}>Name</span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Joe Random\"\r\n          className={classes.nameInput}\r\n          value={name}\r\n          onChange={onNameChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={`flex-col ${classes.mobileFullWidth}`}>\r\n        <span className={classes.leagueSpan}>League</span>\r\n        <select\r\n          name=\"league\"\r\n          id=\"league\"\r\n          className={classes.league}\r\n          onChange={onLeagueHandler}\r\n        >\r\n          <option value=\"Both\" selected>\r\n            Both\r\n          </option>\r\n          <option value=\"AL\">AL</option>\r\n          <option value=\"NL\">NL</option>\r\n        </select>\r\n      </div>\r\n      {divisionToggle ? (\r\n        <div className={`flex-col ${classes.mobileFullWidth}`}>\r\n          <span className={`${classes.divisionSpan} ${classes.disabled}`}>\r\n            Division\r\n          </span>\r\n          <select\r\n            name=\"division\"\r\n            id=\"division\"\r\n            className={classes.division}\r\n            disabled\r\n          >\r\n            <option value=\"All\" selected>\r\n              All\r\n            </option>\r\n            <option value=\"east\">East</option>\r\n            <option value=\"central\">Central</option>\r\n            <option value=\"west\">West</option>\r\n          </select>\r\n        </div>\r\n      ) : (\r\n        <div className={`flex-col ${classes.mobileFullWidth}`}>\r\n          <span className={classes.divisionSpan}>Division</span>\r\n          <select\r\n            name=\"division\"\r\n            id=\"division\"\r\n            className={classes.division}\r\n            onChange={onDivisionChangeHandler}\r\n          >\r\n            <option value=\"All\">All</option>\r\n            <option value=\"east\">East</option>\r\n            <option value=\"central\">Central</option>\r\n            <option value=\"west\">West</option>\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      {visibleTeams}\r\n      <button\r\n        type=\"submit\"\r\n        className={`${classes.submit} ${classes.mobileShow}`}\r\n      >\r\n        <FaSearch className={classes.searchIcon} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Footer.js",["160"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\DisplayStats.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\modals\\PlayerStatsModal.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\BuildTeamPlayers.js",["161","162"],"import React, { useState } from \"react\";\r\nimport classes from \"./BuildTeamPlayers.module.css\";\r\nimport Lineup from \"./Lineup\";\r\nimport Rotation from \"./Rotation\";\r\nimport Bench from \"./Bench\";\r\nimport Bullpen from \"./Bullpen\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TeamAverages from \"../teamAverages/TeamAverages\";\r\n\r\nconst BuildTeamPlayers = () => {\r\n  const [showLineup, setShowLineup] = useState(true);\r\n  const [showRotation, setShowRotation] = useState(true);\r\n  const activeClasses = `${classes.btn} ${classes.active}`;\r\n  const inactiveClasses = `${classes.btn} ${classes.inactive}`;\r\n\r\n  const onShowLineupBtnHandler = () => {\r\n    setShowLineup(true);\r\n  };\r\n\r\n  const onShowBenchBtnHandler = () => {\r\n    setShowLineup(false);\r\n  };\r\n\r\n  const onShowRotationBtnHandler = () => {\r\n    setShowRotation(true);\r\n  };\r\n\r\n  const onShowBullpenBtnHandler = () => {\r\n    setShowRotation(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <TeamAverages />\r\n      <div className={classes.btnContainer}>\r\n        <div className={classes.positionPlayersBtnCont}>\r\n          <button\r\n            className={showLineup ? activeClasses : inactiveClasses}\r\n            onClick={onShowLineupBtnHandler}\r\n          >\r\n            Lineup\r\n          </button>\r\n          <button\r\n            className={!showLineup ? activeClasses : inactiveClasses}\r\n            onClick={onShowBenchBtnHandler}\r\n          >\r\n            Bench\r\n          </button>\r\n        </div>\r\n        <div className={classes.pitcherPlayersBtnCont}>\r\n          <button\r\n            className={showRotation ? activeClasses : inactiveClasses}\r\n            onClick={onShowRotationBtnHandler}\r\n          >\r\n            Rotation\r\n          </button>\r\n          <button\r\n            className={!showRotation ? activeClasses : inactiveClasses}\r\n            onClick={onShowBullpenBtnHandler}\r\n          >\r\n            Bullpen\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={classes.starters}>\r\n        <div className={classes.positionPlayers}>\r\n          {showLineup && <Lineup />}\r\n          {!showLineup && <Bench />}\r\n        </div>\r\n        <div className={classes.pitcherPlayers}>\r\n          {showRotation && <Rotation />}\r\n          {!showRotation && <Bullpen />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildTeamPlayers;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Lineup.js",["163","164","165","166"],"import React, { useEffect, useState } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Lineup.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Lineup = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const startingLineup = useSelector((state) => state.lineup);\r\n  const bench = useSelector((state) => state.bench);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Starting Lineup Changed\");\r\n  }, [startingLineup]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToLineup = (i, player) => {\r\n    // check to see if player is already in either lineup or on bench\r\n    let invalid = startingLineup.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = bench.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Player is already in lineup or on bench\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToLineup\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetLineupHandler = () => {\r\n    dispatch({ type: \"resetLineup\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerOnTeam = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapLineupPositions = (player, position) => {\r\n    console.log(\"Swap Lineup Postions\");\r\n    dispatch({\r\n      type: \"swapPlayersInLineup\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.animation}`}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Lineup</p>\r\n        <ResetBtn resetFunc={onResetLineupHandler}>Reset Lineup</ResetBtn>\r\n      </div>\r\n\r\n      {startingLineup.map((el, i) => (\r\n        <div className={`flex-c`}>\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={Math.random()}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToLineup}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerOnTeam}\r\n            swapPosition={swapLineupPositions}\r\n            positionPlayer={true}\r\n            positionAllowed=\"C,1B,2B,3B,SS,LF,CF,RF\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Lineup;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\AddPlayerCard.js",["167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport classes from \"./AddPlayerCard.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst AddPlayerCard = React.memo(\r\n  ({\r\n    lineupPosition,\r\n    addPlayer,\r\n    player = \"\",\r\n    selectPlayerFunc = \"\",\r\n    swapPosition = \"\",\r\n    positionPlayer,\r\n    positionAllowed = \"\",\r\n  }) => {\r\n    const [selected, setSelected] = useState(false);\r\n    const selectedPlayer = useSelector((state) => state.selectedPlayer);\r\n    const selectedPlayerOnTeam = useSelector(\r\n      (state) => state.selectedPlayerOnTeam\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    const onSetCardHandler = () => {\r\n      if (!selectedPlayer) return;\r\n      if (!positionAllowed.includes(selectedPlayer.position)) {\r\n        dispatch({\r\n          type: \"errorMessage\",\r\n          message: \"The player selected cannot play this position\",\r\n        });\r\n        return;\r\n      }\r\n      console.log(\"Set card\");\r\n      addPlayer(lineupPosition, selectedPlayer);\r\n      dispatch({ type: \"unselectPlayer\" });\r\n    };\r\n\r\n    const onSwapPlayerHandler = (e) => {\r\n      console.log(e.target);\r\n      const selectedPlayerid = +e.target.dataset.id;\r\n      const selectedPlayerPosition = +e.target.dataset.position;\r\n      if (!selectedPlayerOnTeam) {\r\n        selectPlayerFunc(player, selectedPlayerPosition, positionPlayer);\r\n        setSelected(true);\r\n        return;\r\n      }\r\n      if (selectedPlayerOnTeam.player.id === selectedPlayerid) {\r\n        dispatch({\r\n          type: \"errorMessage\",\r\n          message: \"Cannot swap the same player\",\r\n        });\r\n        return;\r\n      }\r\n      if (selectedPlayerOnTeam.positionPlayer !== positionPlayer) {\r\n        console.log(\"They are not the same position\");\r\n        return;\r\n      }\r\n      swapPosition(player, selectedPlayerPosition);\r\n    };\r\n\r\n    const openModal = () => {\r\n      dispatch({ type: \"openModal\" });\r\n    };\r\n\r\n    const clickedPlayer = (player) => {\r\n      dispatch({ type: \"selectedPlayer\", selectedPlayer: player });\r\n    };\r\n\r\n    const onPlayerClick = (player) => {\r\n      openModal();\r\n      clickedPlayer(player);\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        {!player && (\r\n          <div className=\"flex-col\">\r\n            <div\r\n              className={classes.unoccupiedPlayerSpot}\r\n              onClick={onSetCardHandler}\r\n            >\r\n              <FaPlus className={classes.plus} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {player && (\r\n          <div className=\"flex-col\">\r\n            <div\r\n              className={classes.occupiedPlayerSpot}\r\n              onClick={onSwapPlayerHandler}\r\n              data-position={lineupPosition}\r\n              data-id={player.id}\r\n              onDoubleClick={onPlayerClick.bind(this, player)}\r\n            >\r\n              {player.name}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n);\r\n\r\nexport default AddPlayerCard;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Rotation.js",["169","170","171"],"import React, { useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Rotation.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Rotation = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const startingRotation = useSelector((state) => state.rotation);\r\n  const bullpen = useSelector((state) => state.bullpen);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Rotation Component Rerendered\");\r\n  }, [startingRotation]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToRotation = (i, player) => {\r\n    console.log(player);\r\n    let invalid = startingRotation.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = bullpen.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Player is already in rotation or in bullpen\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: \"addPlayerToRotation\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetRotationHandler = () => {\r\n    dispatch({ type: \"resetRotation\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerInRotation = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapRotationPositions = (player, position) => {\r\n    console.log(\"Swap Rotation Positions\");\r\n    dispatch({\r\n      type: \"swapPlayersInRotation\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Rotation</p>\r\n        <ResetBtn resetFunc={onResetRotationHandler}>Reset Rotation</ResetBtn>\r\n      </div>\r\n\r\n      {startingRotation.map((el, i) => (\r\n        <div className=\"flex-c\">\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToRotation}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerInRotation}\r\n            swapPosition={swapRotationPositions}\r\n            positionPlayer={false}\r\n            positionAllowed=\"SP\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Rotation;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bench.js",["172","173","174"],"import React, { useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Bench.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Bench = React.memo(() => {\r\n  const startingLineup = useSelector((state) => state.lineup);\r\n  const startingBench = useSelector((state) => state.bench);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(\"Bench has changed\");\r\n  }, [startingBench]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToBench = (i, player, showErrorFunc) => {\r\n    // check to see if player is already in either lineup or on bench\r\n    let invalid = startingLineup.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = startingBench.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Player is already in lineup or on bench\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToBench\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetBenchHandler = () => {\r\n    dispatch({ type: \"resetBench\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerOnTeam = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapBenchPositions = (player, position) => {\r\n    console.log(\"Swap Bench Postions\");\r\n    dispatch({\r\n      type: \"swapPlayersOnBench\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Bench</p>\r\n        <ResetBtn resetFunc={onResetBenchHandler}>Reset Bench</ResetBtn>\r\n      </div>\r\n      {startingBench.map((el, i) => (\r\n        <div className=\"flex-c\" key={i}>\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToBench}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerOnTeam}\r\n            swapPosition={swapBenchPositions}\r\n            positionPlayer={true}\r\n            positionAllowed=\"C,1B,2B,3B,SS,LF,CF,RF\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bench;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bullpen.js",["175","176"],"import React, { useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Bullpen.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Bullpen = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const startingBullpen = useSelector((state) => state.bullpen);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Bullpen has changed\");\r\n    console.log(startingBullpen);\r\n  }, [startingBullpen]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToBullpen = (i, player) => {\r\n    console.log(player);\r\n    let invalid = startingBullpen.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n\r\n    if (invalid) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Player is already in rotation or in bullpen\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToBullpen\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetBullpenHandler = () => {\r\n    dispatch({ type: \"resetBullpen\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerInBullpen = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapBullpenPositions = (player, position) => {\r\n    console.log(\"Swap Bullpen Positions\");\r\n    dispatch({\r\n      type: \"swapPlayersInBullpen\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Bullpen</p>\r\n        <ResetBtn resetFunc={onResetBullpenHandler}>Reset Bullpen</ResetBtn>\r\n      </div>\r\n\r\n      {startingBullpen.map((el, i) => (\r\n        <div className=\"flex-c\">\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToBullpen}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerInBullpen}\r\n            swapPosition={swapBullpenPositions}\r\n            positionPlayer={false}\r\n            positionAllowed=\"RP\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bullpen;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\PlayerCard.js",["177","178"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\ResetBtn.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamAverages\\TeamAverages.js",["179","180","181"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport classes from \"./TeamAverages.module.css\";\r\n\r\nconst TeamAverages = () => {\r\n  const [toggleHitting, setToggleHitting] = useState(true);\r\n  const [positionPlayerAverages, setPositionPlayerAverages] = useState({});\r\n  const [pitchingPlayerAverages, setPitchingPlayerAverages] = useState({});\r\n  const lineup = useSelector((state) => state.lineup);\r\n  const rotation = useSelector((state) => state.rotation);\r\n  const bench = useSelector((state) => state.bench);\r\n  const bullpen = useSelector((state) => state.bullpen);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Averages Component Rerender\");\r\n    if (toggleHitting) {\r\n      calcHittingAverages();\r\n    } else {\r\n      calcPitchingAverages();\r\n    }\r\n  }, [lineup, rotation, bench, bullpen, toggleHitting]);\r\n\r\n  const calcHittingAverages = () => {\r\n    let contact = 0,\r\n      power = 0,\r\n      speed = 0,\r\n      fielding = 0,\r\n      positionPlayerCount = 0;\r\n    lineup.forEach((player) => {\r\n      if (player !== undefined) {\r\n        positionPlayerCount++;\r\n\r\n        const contactLeft = player.conL;\r\n        const contactRight = player.conR;\r\n        contact += (contactLeft + contactRight) / 2;\r\n\r\n        const powerLeft = player.pwrL;\r\n        const powerRight = player.pwrR;\r\n        power += (powerLeft + powerRight) / 2;\r\n\r\n        speed += player.spd;\r\n        fielding += player.fld;\r\n      }\r\n    });\r\n    bench.forEach((player) => {\r\n      if (player !== undefined) {\r\n        positionPlayerCount++;\r\n        const contactLeft = player.conL;\r\n        const contactRight = player.conR;\r\n        contact += (contactLeft + contactRight) / 2;\r\n\r\n        const powerLeft = player.pwrL;\r\n        const powerRight = player.pwrR;\r\n        power += (powerLeft + powerRight) / 2;\r\n\r\n        speed += player.spd;\r\n        fielding += player.fld;\r\n      }\r\n    });\r\n    contact = contact / positionPlayerCount;\r\n    power = power / positionPlayerCount;\r\n    speed = speed / positionPlayerCount;\r\n    fielding = fielding / positionPlayerCount;\r\n    setPositionPlayerAverages({\r\n      contact: contact,\r\n      power: power,\r\n      speed: speed,\r\n      fielding: fielding,\r\n    });\r\n  };\r\n\r\n  const calcPitchingAverages = () => {\r\n    let hPerNine = 0,\r\n      wPerNine = 0,\r\n      kPerNine = 0,\r\n      velocity = 0,\r\n      pitcherPlayerCount = 0;\r\n    rotation.forEach((player) => {\r\n      if (player !== undefined) {\r\n        pitcherPlayerCount++;\r\n        hPerNine += player.hPerNine;\r\n        wPerNine += player.wPerNine;\r\n        kPerNine += player.kPerNine;\r\n        velocity += player.vel;\r\n      }\r\n    });\r\n    bullpen.forEach((player) => {\r\n      if (player !== undefined) {\r\n        pitcherPlayerCount++;\r\n        hPerNine += player.hPerNine;\r\n        wPerNine += player.wPerNine;\r\n        kPerNine += player.kPerNine;\r\n        velocity += player.vel;\r\n      }\r\n    });\r\n    hPerNine = hPerNine / pitcherPlayerCount;\r\n    wPerNine = wPerNine / pitcherPlayerCount;\r\n    kPerNine = kPerNine / pitcherPlayerCount;\r\n    velocity = velocity / pitcherPlayerCount;\r\n    setPitchingPlayerAverages({\r\n      hPerNine: hPerNine,\r\n      wPerNine: wPerNine,\r\n      kPerNine: kPerNine,\r\n      velocity: velocity,\r\n    });\r\n  };\r\n\r\n  const onToggleTeamAveragesHandler = () => {\r\n    console.log(\"Toggle\");\r\n    setToggleHitting(!toggleHitting);\r\n  };\r\n\r\n  let content;\r\n  if (toggleHitting) {\r\n    content = (\r\n      <React.Fragment>\r\n        <div className={`flex-c ${classes.wrap}`}>\r\n          <div className=\"flex-c\">\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Contact</span>\r\n              <span className={classes.stat}>\r\n                {positionPlayerAverages.contact\r\n                  ? positionPlayerAverages.contact.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Power</span>\r\n              <span className={classes.stat}>\r\n                {positionPlayerAverages.power\r\n                  ? positionPlayerAverages.power.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className={`flex-c`}>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Speed</span>\r\n              <span className={classes.stat}>\r\n                {positionPlayerAverages.speed\r\n                  ? positionPlayerAverages.speed.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Fielding</span>\r\n              <span className={classes.stat}>\r\n                {positionPlayerAverages.fielding\r\n                  ? positionPlayerAverages.fielding.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    content = (\r\n      <React.Fragment>\r\n        <div className={`flex-c ${classes.wrap}`}>\r\n          <div className=\"flex-c\">\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>H/9</span>\r\n              <span className={classes.stat}>\r\n                {pitchingPlayerAverages.hPerNine\r\n                  ? pitchingPlayerAverages.hPerNine.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>W/9</span>\r\n              <span className={classes.stat}>\r\n                {pitchingPlayerAverages.wPerNine\r\n                  ? pitchingPlayerAverages.wPerNine.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-c\">\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>K/9</span>\r\n              <span className={classes.stat}>\r\n                {pitchingPlayerAverages.kPerNine\r\n                  ? pitchingPlayerAverages.kPerNine.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Velocity</span>\r\n              <span className={classes.stat}>\r\n                {pitchingPlayerAverages.velocity\r\n                  ? pitchingPlayerAverages.velocity.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`flex-col ${classes.averagesContainer}`}>\r\n      <span className={classes.title}>\r\n        Team {toggleHitting ? \"Hitting\" : \"Pitching\"} Averages\r\n      </span>\r\n      <button className={classes.btn} onClick={onToggleTeamAveragesHandler}>\r\n        {toggleHitting ? \"Show Pitching Averages\" : \"Show Hitting Averages\"}\r\n      </button>\r\n      <div className={`flex-c ${classes.contentContainer}`}>{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamAverages;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\PositionPlayerStats.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\PitcherPlayerStats.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\comparePlayers\\PlayerComparison.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\comparePlayers\\Player.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\data\\data.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\errorMessage\\ErrorMessageBar.js",["182"],"import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./ErrorMessageBar.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ErrorMessageBar = () => {\r\n  const [showError, setShowError] = useState(false);\r\n  const errorMessage = useSelector((state) => state.errorMessage);\r\n  const dispatch = useDispatch();\r\n\r\n  const showErrorMessage = () => {\r\n    setShowError(true);\r\n    setTimeout(() => {\r\n      setShowError(false);\r\n      dispatch({ type: \"errorMessage\", message: \"\" });\r\n    }, 5000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    showErrorMessage();\r\n  }, [errorMessage]);\r\n\r\n  return (\r\n    showError &&\r\n    errorMessage.length > 0 && (\r\n      <div className={classes.errorBar}>\r\n        <p className={classes.errorMsg}>{errorMessage}</p>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ErrorMessageBar;\r\n",{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":29,"column":6,"nodeType":"189","endLine":29,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":9,"column":17,"nodeType":"193","messageId":"194","endLine":9,"endColumn":26},{"ruleId":"191","severity":1,"message":"195","line":18,"column":7,"nodeType":"193","messageId":"194","endLine":18,"endColumn":10},{"ruleId":"196","severity":2,"message":"197","line":9,"column":10,"nodeType":"198","messageId":"199","endLine":9,"endColumn":14},{"ruleId":"196","severity":2,"message":"197","line":10,"column":10,"nodeType":"198","messageId":"199","endLine":10,"endColumn":14},{"ruleId":"196","severity":2,"message":"197","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"201","line":7,"column":7,"nodeType":"202","messageId":"203","endLine":11,"endColumn":8,"fix":"204"},{"ruleId":"191","severity":1,"message":"205","line":7,"column":10,"nodeType":"193","messageId":"194","endLine":7,"endColumn":21},{"ruleId":"191","severity":1,"message":"206","line":7,"column":23,"nodeType":"193","messageId":"194","endLine":7,"endColumn":34},{"ruleId":"191","severity":1,"message":"207","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"208","line":20,"column":6,"nodeType":"189","endLine":20,"endColumn":8,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":25,"column":29,"nodeType":"212","messageId":"213","endLine":25,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":30,"column":31,"nodeType":"212","messageId":"213","endLine":30,"endColumn":38},{"ruleId":"191","severity":1,"message":"192","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"214","line":16,"column":12,"nodeType":"193","messageId":"194","endLine":16,"endColumn":20},{"ruleId":"187","severity":1,"message":"208","line":20,"column":6,"nodeType":"189","endLine":20,"endColumn":8,"suggestions":"215"},{"ruleId":"210","severity":1,"message":"211","line":25,"column":29,"nodeType":"212","messageId":"213","endLine":25,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":30,"column":31,"nodeType":"212","messageId":"213","endLine":30,"endColumn":38},{"ruleId":"187","severity":1,"message":"208","line":20,"column":6,"nodeType":"189","endLine":20,"endColumn":8,"suggestions":"216"},{"ruleId":"210","severity":1,"message":"211","line":25,"column":29,"nodeType":"212","messageId":"213","endLine":25,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":30,"column":31,"nodeType":"212","messageId":"213","endLine":30,"endColumn":38},{"ruleId":"187","severity":1,"message":"208","line":20,"column":6,"nodeType":"189","endLine":20,"endColumn":8,"suggestions":"217"},{"ruleId":"210","severity":1,"message":"211","line":25,"column":29,"nodeType":"212","messageId":"213","endLine":25,"endColumn":36},{"ruleId":"191","severity":1,"message":"205","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":21},{"ruleId":"191","severity":1,"message":"206","line":2,"column":23,"nodeType":"193","messageId":"194","endLine":2,"endColumn":34},{"ruleId":"191","severity":1,"message":"218","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":38},{"ruleId":"191","severity":1,"message":"206","line":2,"column":23,"nodeType":"193","messageId":"194","endLine":2,"endColumn":34},{"ruleId":"187","severity":1,"message":"219","line":21,"column":6,"nodeType":"189","endLine":21,"endColumn":55,"suggestions":"220"},{"ruleId":"187","severity":1,"message":"221","line":20,"column":6,"nodeType":"189","endLine":20,"endColumn":20,"suggestions":"222"},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["225"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'app' is assigned a value but never used.","react/jsx-no-undef","'Link' is not defined.","JSXIdentifier","undefined","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"226","text":"227"},"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["228"],"array-callback-return","Array.prototype.some() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'selected' is assigned a value but never used.",["229"],["230"],["231"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'calcHittingAverages' and 'calcPitchingAverages'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'showErrorMessage'. Either include it or remove the dependency array.",["233"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},[265,265]," rel=\"noreferrer\"",{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"236","fix":"239"},{"desc":"236","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [getData]",{"range":"245","text":"246"},"Update the dependencies array to be: [dispatch]",{"range":"247","text":"248"},{"range":"249","text":"248"},{"range":"250","text":"248"},{"range":"251","text":"248"},"Update the dependencies array to be: [lineup, rotation, bench, bullpen, toggleHitting, calcHittingAverages, calcPitchingAverages]",{"range":"252","text":"253"},"Update the dependencies array to be: [errorMessage, showErrorMessage]",{"range":"254","text":"255"},[949,951],"[getData]",[626,628],"[dispatch]",[636,638],[615,617],[598,600],[833,882],"[lineup, rotation, bench, bullpen, toggleHitting, calcHittingAverages, calcPitchingAverages]",[600,614],"[errorMessage, showErrorMessage]"]