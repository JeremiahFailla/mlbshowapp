[{"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\index.js":"1","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\reportWebVitals.js":"2","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\App.js":"3","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Layout.js":"4","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\MainNavigation.js":"5","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\Welcome.js":"6","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\ComparePlayers.js":"7","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\BuildTeam.js":"8","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\SearchPlayer.js":"9","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Card.js":"10","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\firebase\\firebase.config.js":"11","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\store\\index.js":"12","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\features.js":"13","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\Features.js":"14","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\PlayersList.js":"15","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\searchBar\\SearchBar.js":"16","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Footer.js":"17","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\DisplayStats.js":"18","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\modals\\PlayerStatsModal.js":"19","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\BuildTeamPlayers.js":"20","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Lineup.js":"21","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\AddPlayerCard.js":"22","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Rotation.js":"23","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bench.js":"24","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bullpen.js":"25","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\PlayerCard.js":"26","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\ResetBtn.js":"27","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamAverages\\TeamAverages.js":"28","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\PositionPlayerStats.js":"29","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\PitcherPlayerStats.js":"30","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\comparePlayers\\PlayerComparison.js":"31","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\comparePlayers\\Player.js":"32","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\data\\data.js":"33","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\errorMessage\\ErrorMessageBar.js":"34"},{"size":385,"mtime":1635541217014,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":1501,"mtime":1642099649931,"results":"38","hashOfConfig":"36"},{"size":354,"mtime":1639156050228,"results":"39","hashOfConfig":"36"},{"size":2792,"mtime":1642191394746,"results":"40","hashOfConfig":"36"},{"size":1043,"mtime":1639154179694,"results":"41","hashOfConfig":"36"},{"size":3043,"mtime":1639174120634,"results":"42","hashOfConfig":"36"},{"size":3333,"mtime":1639173075341,"results":"43","hashOfConfig":"36"},{"size":5440,"mtime":1642099575179,"results":"44","hashOfConfig":"36"},{"size":204,"mtime":1635292211864,"results":"45","hashOfConfig":"36"},{"size":727,"mtime":1631904864698,"results":"46","hashOfConfig":"36"},{"size":4005,"mtime":1639164255939,"results":"47","hashOfConfig":"36"},{"size":435,"mtime":1633137601851,"results":"48","hashOfConfig":"36"},{"size":760,"mtime":1633198411695,"results":"49","hashOfConfig":"36"},{"size":5701,"mtime":1640287679920,"results":"50","hashOfConfig":"36"},{"size":9386,"mtime":1642100481708,"results":"51","hashOfConfig":"36"},{"size":373,"mtime":1642027278859,"results":"52","hashOfConfig":"36"},{"size":5097,"mtime":1642098761172,"results":"53","hashOfConfig":"36"},{"size":1093,"mtime":1642099197419,"results":"54","hashOfConfig":"36"},{"size":2390,"mtime":1638469845301,"results":"55","hashOfConfig":"36"},{"size":2610,"mtime":1642099407466,"results":"56","hashOfConfig":"36"},{"size":3018,"mtime":1639163088562,"results":"57","hashOfConfig":"36"},{"size":2559,"mtime":1642099430749,"results":"58","hashOfConfig":"36"},{"size":2615,"mtime":1642099467142,"results":"59","hashOfConfig":"36"},{"size":2368,"mtime":1642099385959,"results":"60","hashOfConfig":"36"},{"size":195,"mtime":1636410595141,"results":"61","hashOfConfig":"36"},{"size":265,"mtime":1636583274347,"results":"62","hashOfConfig":"36"},{"size":7093,"mtime":1642099763246,"results":"63","hashOfConfig":"36"},{"size":1528,"mtime":1642096497899,"results":"64","hashOfConfig":"36"},{"size":2088,"mtime":1642095985002,"results":"65","hashOfConfig":"36"},{"size":5746,"mtime":1640637626121,"results":"66","hashOfConfig":"36"},{"size":19423,"mtime":1640640461476,"results":"67","hashOfConfig":"36"},{"size":10711,"mtime":1639165566191,"results":"68","hashOfConfig":"36"},{"size":852,"mtime":1639161361675,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1qkq2x0",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"72"},"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\index.js",[],["151","152"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\reportWebVitals.js",[],["153","154"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\App.js",["155"],"import Layout from \"./components/layout/Layout\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Welcome from \"./pages/Welcome\";\nimport ComparePlayers from \"./pages/ComparePlayers\";\nimport BuildTeam from \"./pages/BuildTeam\";\nimport SearchPlayer from \"./pages/SearchPlayer\";\nimport classes from \"./App.module.css\";\nimport React, { useEffect } from \"react\";\n\nimport { collection, getDocs } from \"@firebase/firestore\";\nimport db from \"./firebase/firebase.config\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const getData = async () => {\n    const players = [];\n    const querySnapshot = await getDocs(collection(db, \"players\"));\n    querySnapshot.forEach((player) => {\n      // doc.data() is never undefined for query doc snapshots\n      players.push(player.data());\n    });\n    dispatch({ type: \"insertFirebasePlayers\", players: players });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <Layout>\n        <div className={classes.app}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Welcome />\n            </Route>\n            <Route path=\"/build-team\">\n              <BuildTeam />\n            </Route>\n            <Route path=\"/compare-players\">\n              <ComparePlayers />\n            </Route>\n            <Route path=\"/search-players\">\n              <SearchPlayer />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Layout.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\MainNavigation.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\Welcome.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\ComparePlayers.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\BuildTeam.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\pages\\SearchPlayer.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Card.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\firebase\\firebase.config.js",["156"],"// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDbasau3ZQW7QM2ySN4f26dA7jxvXODJ-o\",\r\n  authDomain: \"mlbshowapp.firebaseapp.com\",\r\n  projectId: \"mlbshowapp\",\r\n  storageBucket: \"mlbshowapp.appspot.com\",\r\n  messagingSenderId: \"914571557168\",\r\n  appId: \"1:914571557168:web:8d6aaa0d14fe1772b070f5\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default getFirestore();\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\store\\index.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\features.js",["157","158","159"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\Features.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\PlayersList.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\searchBar\\SearchBar.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\layout\\Footer.js",["160"],"import React from \"react\";\r\nimport classes from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <a\r\n        className={classes.content}\r\n        href=\"https://jeremiahfailla.com/\"\r\n        target=\"_blank\"\r\n      >\r\n        &copy; Jeremiah Failla 2021\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\DisplayStats.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\modals\\PlayerStatsModal.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\BuildTeamPlayers.js",["161","162"],"import React, { useState } from \"react\";\r\nimport classes from \"./BuildTeamPlayers.module.css\";\r\nimport Lineup from \"./Lineup\";\r\nimport Rotation from \"./Rotation\";\r\nimport Bench from \"./Bench\";\r\nimport Bullpen from \"./Bullpen\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TeamAverages from \"../teamAverages/TeamAverages\";\r\n\r\nconst BuildTeamPlayers = () => {\r\n  const [showLineup, setShowLineup] = useState(true);\r\n  const [showRotation, setShowRotation] = useState(true);\r\n  const activeClasses = `${classes.btn} ${classes.active}`;\r\n  const inactiveClasses = `${classes.btn} ${classes.inactive}`;\r\n\r\n  const onShowLineupBtnHandler = () => {\r\n    setShowLineup(true);\r\n  };\r\n\r\n  const onShowBenchBtnHandler = () => {\r\n    setShowLineup(false);\r\n  };\r\n\r\n  const onShowRotationBtnHandler = () => {\r\n    setShowRotation(true);\r\n  };\r\n\r\n  const onShowBullpenBtnHandler = () => {\r\n    setShowRotation(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <TeamAverages />\r\n      <div className={classes.btnContainer}>\r\n        <div className={classes.positionPlayersBtnCont}>\r\n          <button\r\n            className={showLineup ? activeClasses : inactiveClasses}\r\n            onClick={onShowLineupBtnHandler}\r\n          >\r\n            Lineup\r\n          </button>\r\n          <button\r\n            className={!showLineup ? activeClasses : inactiveClasses}\r\n            onClick={onShowBenchBtnHandler}\r\n          >\r\n            Bench\r\n          </button>\r\n        </div>\r\n        <div className={classes.pitcherPlayersBtnCont}>\r\n          <button\r\n            className={showRotation ? activeClasses : inactiveClasses}\r\n            onClick={onShowRotationBtnHandler}\r\n          >\r\n            Rotation\r\n          </button>\r\n          <button\r\n            className={!showRotation ? activeClasses : inactiveClasses}\r\n            onClick={onShowBullpenBtnHandler}\r\n          >\r\n            Bullpen\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={classes.starters}>\r\n        <div className={classes.positionPlayers}>\r\n          {showLineup && <Lineup />}\r\n          {!showLineup && <Bench />}\r\n        </div>\r\n        <div className={classes.pitcherPlayers}>\r\n          {showRotation && <Rotation />}\r\n          {!showRotation && <Bullpen />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildTeamPlayers;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Lineup.js",["163","164","165","166"],"import React, { useEffect, useState } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Lineup.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Lineup = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const startingLineup = useSelector((state) => state.lineup);\r\n  const bench = useSelector((state) => state.bench);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToLineup = (i, player) => {\r\n    // check to see if player is already in either lineup or on bench\r\n    let invalid = startingLineup.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = bench.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Player is already in lineup or on bench\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToLineup\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetLineupHandler = () => {\r\n    dispatch({ type: \"resetLineup\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerOnTeam = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapLineupPositions = (player, position) => {\r\n    dispatch({\r\n      type: \"swapPlayersInLineup\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.animation}`}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Lineup</p>\r\n        <ResetBtn resetFunc={onResetLineupHandler}>Reset Lineup</ResetBtn>\r\n      </div>\r\n\r\n      {startingLineup.map((el, i) => (\r\n        <div className={`flex-c`}>\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToLineup}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerOnTeam}\r\n            swapPosition={swapLineupPositions}\r\n            positionPlayer={true}\r\n            positionAllowed=\"C,1B,2B,3B,SS,LF,CF,RF\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Lineup;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\AddPlayerCard.js",["167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport classes from \"./AddPlayerCard.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst AddPlayerCard = React.memo(\r\n  ({\r\n    lineupPosition,\r\n    addPlayer,\r\n    player = \"\",\r\n    selectPlayerFunc = \"\",\r\n    swapPosition = \"\",\r\n    positionPlayer,\r\n    positionAllowed = \"\",\r\n  }) => {\r\n    const [selected, setSelected] = useState(false);\r\n    const selectedPlayer = useSelector((state) => state.selectedPlayer);\r\n    const selectedPlayerOnTeam = useSelector(\r\n      (state) => state.selectedPlayerOnTeam\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n    const onSetCardHandler = () => {\r\n      if (!selectedPlayer) return;\r\n      if (!positionAllowed.includes(selectedPlayer.position)) {\r\n        dispatch({\r\n          type: \"errorMessage\",\r\n          message: \"The player selected cannot play this position\",\r\n        });\r\n        return;\r\n      }\r\n      console.log(\"Set card\");\r\n      addPlayer(lineupPosition, selectedPlayer);\r\n      dispatch({ type: \"unselectPlayer\" });\r\n    };\r\n\r\n    const onSwapPlayerHandler = (e) => {\r\n      console.log(e.target);\r\n      const selectedPlayerid = +e.target.dataset.id;\r\n      const selectedPlayerPosition = +e.target.dataset.position;\r\n      if (!selectedPlayerOnTeam) {\r\n        selectPlayerFunc(player, selectedPlayerPosition, positionPlayer);\r\n        setSelected(true);\r\n        return;\r\n      }\r\n      if (selectedPlayerOnTeam.player.id === selectedPlayerid) {\r\n        dispatch({\r\n          type: \"errorMessage\",\r\n          message: \"Cannot swap the same player\",\r\n        });\r\n        return;\r\n      }\r\n      if (selectedPlayerOnTeam.positionPlayer !== positionPlayer) {\r\n        console.log(\"They are not the same position\");\r\n        return;\r\n      }\r\n      swapPosition(player, selectedPlayerPosition);\r\n    };\r\n\r\n    const openModal = () => {\r\n      dispatch({ type: \"openModal\" });\r\n    };\r\n\r\n    const clickedPlayer = (player) => {\r\n      dispatch({ type: \"selectedPlayer\", selectedPlayer: player });\r\n    };\r\n\r\n    const onPlayerClick = (player) => {\r\n      openModal();\r\n      clickedPlayer(player);\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        {!player && (\r\n          <div className=\"flex-col\">\r\n            <div\r\n              className={classes.unoccupiedPlayerSpot}\r\n              onClick={onSetCardHandler}\r\n            >\r\n              <FaPlus className={classes.plus} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {player && (\r\n          <div className=\"flex-col\">\r\n            <div\r\n              className={classes.occupiedPlayerSpot}\r\n              onClick={onSwapPlayerHandler}\r\n              data-position={lineupPosition}\r\n              data-id={player.id}\r\n              onDoubleClick={onPlayerClick.bind(this, player)}\r\n            >\r\n              {player.name}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n);\r\n\r\nexport default AddPlayerCard;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Rotation.js",["169","170","171"],"import React, { useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Rotation.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Rotation = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const startingRotation = useSelector((state) => state.rotation);\r\n  const bullpen = useSelector((state) => state.bullpen);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToRotation = (i, player) => {\r\n    let invalid = startingRotation.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = bullpen.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Player is already in rotation or in bullpen\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: \"addPlayerToRotation\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetRotationHandler = () => {\r\n    dispatch({ type: \"resetRotation\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerInRotation = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapRotationPositions = (player, position) => {\r\n    dispatch({\r\n      type: \"swapPlayersInRotation\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Rotation</p>\r\n        <ResetBtn resetFunc={onResetRotationHandler}>Reset Rotation</ResetBtn>\r\n      </div>\r\n\r\n      {startingRotation.map((el, i) => (\r\n        <div className=\"flex-c\">\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToRotation}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerInRotation}\r\n            swapPosition={swapRotationPositions}\r\n            positionPlayer={false}\r\n            positionAllowed=\"SP\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Rotation;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bench.js",["172","173","174"],"import React, { useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Bench.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Bench = React.memo(() => {\r\n  const startingLineup = useSelector((state) => state.lineup);\r\n  const startingBench = useSelector((state) => state.bench);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToBench = (i, player, showErrorFunc) => {\r\n    // check to see if player is already in either lineup or on bench\r\n    let invalid = startingLineup.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n    if (!invalid) {\r\n      invalid = startingBench.some((pl) => {\r\n        if (pl === undefined) return;\r\n        return pl.id === player.id;\r\n      });\r\n    }\r\n\r\n    if (invalid) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Player is already in lineup or on bench\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToBench\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetBenchHandler = () => {\r\n    dispatch({ type: \"resetBench\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerOnTeam = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapBenchPositions = (player, position) => {\r\n    dispatch({\r\n      type: \"swapPlayersOnBench\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Bench</p>\r\n        <ResetBtn resetFunc={onResetBenchHandler}>Reset Bench</ResetBtn>\r\n      </div>\r\n      {startingBench.map((el, i) => (\r\n        <div className=\"flex-c\" key={i}>\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToBench}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerOnTeam}\r\n            swapPosition={swapBenchPositions}\r\n            positionPlayer={true}\r\n            positionAllowed=\"C,1B,2B,3B,SS,LF,CF,RF\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bench;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\Bullpen.js",["175","176"],"import React, { useEffect } from \"react\";\r\nimport AddPlayerCard from \"./AddPlayerCard\";\r\nimport classes from \"./Bullpen.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ResetBtn from \"./ResetBtn\";\r\n\r\nconst Bullpen = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const startingBullpen = useSelector((state) => state.bullpen);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: \"unselectPlayerOnTeam\" });\r\n    };\r\n  }, []);\r\n\r\n  const addPlayerToBullpen = (i, player) => {\r\n    let invalid = startingBullpen.some((pl) => {\r\n      if (pl === undefined) return;\r\n      return pl.id === player.id;\r\n    });\r\n\r\n    if (invalid) {\r\n      dispatch({\r\n        type: \"errorMessage\",\r\n        message: \"Player is already in rotation or in bullpen\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"addPlayerToBullpen\", index: i, player: player });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onResetBullpenHandler = () => {\r\n    dispatch({ type: \"resetBullpen\" });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  const onSelectPlayerInBullpen = (player, id, positionPlayer) => {\r\n    dispatch({\r\n      type: \"selectedPlayerOnTeam\",\r\n      player: player,\r\n      position: id,\r\n      positionPlayer: positionPlayer,\r\n    });\r\n  };\r\n\r\n  const swapBullpenPositions = (player, position) => {\r\n    console.log(\"Swap Bullpen Positions\");\r\n    dispatch({\r\n      type: \"swapPlayersInBullpen\",\r\n      player: player,\r\n      position: position,\r\n    });\r\n    dispatch({ type: \"unselectPlayerOnTeam\" });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.animation}>\r\n      <div className={`flex-c ${classes.titleContainer}`}>\r\n        <p className={classes.title}>Bullpen</p>\r\n        <ResetBtn resetFunc={onResetBullpenHandler}>Reset Bullpen</ResetBtn>\r\n      </div>\r\n\r\n      {startingBullpen.map((el, i) => (\r\n        <div className=\"flex-c\">\r\n          <span>{i + 1}. </span>\r\n          <AddPlayerCard\r\n            key={i}\r\n            lineupPosition={i}\r\n            addPlayer={addPlayerToBullpen}\r\n            player={el}\r\n            selectPlayerFunc={onSelectPlayerInBullpen}\r\n            swapPosition={swapBullpenPositions}\r\n            positionPlayer={false}\r\n            positionAllowed=\"RP\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bullpen;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\PlayerCard.js",["177","178"],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamPlayers\\ResetBtn.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\teamAverages\\TeamAverages.js",["179","180","181"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport classes from \"./TeamAverages.module.css\";\r\n\r\nconst TeamAverages = () => {\r\n  const [toggleHitting, setToggleHitting] = useState(true);\r\n  const [positionPlayerAverages, setPositionPlayerAverages] = useState({});\r\n  const [pitchingPlayerAverages, setPitchingPlayerAverages] = useState({});\r\n  const lineup = useSelector((state) => state.lineup);\r\n  const rotation = useSelector((state) => state.rotation);\r\n  const bench = useSelector((state) => state.bench);\r\n  const bullpen = useSelector((state) => state.bullpen);\r\n\r\n  useEffect(() => {\r\n    if (toggleHitting) {\r\n      calcHittingAverages();\r\n    } else {\r\n      calcPitchingAverages();\r\n    }\r\n  }, [lineup, rotation, bench, bullpen, toggleHitting]);\r\n\r\n  const calcHittingAverages = () => {\r\n    let contact = 0,\r\n      power = 0,\r\n      speed = 0,\r\n      fielding = 0,\r\n      positionPlayerCount = 0;\r\n    lineup.forEach((player) => {\r\n      if (player !== undefined) {\r\n        positionPlayerCount++;\r\n\r\n        const contactLeft = player.conL;\r\n        const contactRight = player.conR;\r\n        contact += (contactLeft + contactRight) / 2;\r\n\r\n        const powerLeft = player.pwrL;\r\n        const powerRight = player.pwrR;\r\n        power += (powerLeft + powerRight) / 2;\r\n\r\n        speed += player.spd;\r\n        fielding += player.fld;\r\n      }\r\n    });\r\n    bench.forEach((player) => {\r\n      if (player !== undefined) {\r\n        positionPlayerCount++;\r\n        const contactLeft = player.conL;\r\n        const contactRight = player.conR;\r\n        contact += (contactLeft + contactRight) / 2;\r\n\r\n        const powerLeft = player.pwrL;\r\n        const powerRight = player.pwrR;\r\n        power += (powerLeft + powerRight) / 2;\r\n\r\n        speed += player.spd;\r\n        fielding += player.fld;\r\n      }\r\n    });\r\n    contact = contact / positionPlayerCount;\r\n    power = power / positionPlayerCount;\r\n    speed = speed / positionPlayerCount;\r\n    fielding = fielding / positionPlayerCount;\r\n    setPositionPlayerAverages({\r\n      contact: contact,\r\n      power: power,\r\n      speed: speed,\r\n      fielding: fielding,\r\n    });\r\n  };\r\n\r\n  const calcPitchingAverages = () => {\r\n    let hPerNine = 0,\r\n      wPerNine = 0,\r\n      kPerNine = 0,\r\n      velocity = 0,\r\n      pitcherPlayerCount = 0;\r\n    rotation.forEach((player) => {\r\n      if (player !== undefined) {\r\n        pitcherPlayerCount++;\r\n        hPerNine += player.hPerNine;\r\n        wPerNine += player.wPerNine;\r\n        kPerNine += player.kPerNine;\r\n        velocity += player.vel;\r\n      }\r\n    });\r\n    bullpen.forEach((player) => {\r\n      if (player !== undefined) {\r\n        pitcherPlayerCount++;\r\n        hPerNine += player.hPerNine;\r\n        wPerNine += player.wPerNine;\r\n        kPerNine += player.kPerNine;\r\n        velocity += player.vel;\r\n      }\r\n    });\r\n    hPerNine = hPerNine / pitcherPlayerCount;\r\n    wPerNine = wPerNine / pitcherPlayerCount;\r\n    kPerNine = kPerNine / pitcherPlayerCount;\r\n    velocity = velocity / pitcherPlayerCount;\r\n    setPitchingPlayerAverages({\r\n      hPerNine: hPerNine,\r\n      wPerNine: wPerNine,\r\n      kPerNine: kPerNine,\r\n      velocity: velocity,\r\n    });\r\n  };\r\n\r\n  const onToggleTeamAveragesHandler = () => {\r\n    setToggleHitting(!toggleHitting);\r\n  };\r\n\r\n  let content;\r\n  if (toggleHitting) {\r\n    content = (\r\n      <React.Fragment>\r\n        <div className={`flex-c ${classes.wrap}`}>\r\n          <div className=\"flex-c\">\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Contact</span>\r\n              <span className={classes.stat}>\r\n                {positionPlayerAverages.contact\r\n                  ? positionPlayerAverages.contact.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Power</span>\r\n              <span className={classes.stat}>\r\n                {positionPlayerAverages.power\r\n                  ? positionPlayerAverages.power.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className={`flex-c`}>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Speed</span>\r\n              <span className={classes.stat}>\r\n                {positionPlayerAverages.speed\r\n                  ? positionPlayerAverages.speed.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Fielding</span>\r\n              <span className={classes.stat}>\r\n                {positionPlayerAverages.fielding\r\n                  ? positionPlayerAverages.fielding.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    content = (\r\n      <React.Fragment>\r\n        <div className={`flex-c ${classes.wrap}`}>\r\n          <div className=\"flex-c\">\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>H/9</span>\r\n              <span className={classes.stat}>\r\n                {pitchingPlayerAverages.hPerNine\r\n                  ? pitchingPlayerAverages.hPerNine.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>W/9</span>\r\n              <span className={classes.stat}>\r\n                {pitchingPlayerAverages.wPerNine\r\n                  ? pitchingPlayerAverages.wPerNine.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-c\">\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>K/9</span>\r\n              <span className={classes.stat}>\r\n                {pitchingPlayerAverages.kPerNine\r\n                  ? pitchingPlayerAverages.kPerNine.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <div className={classes.flexCol}>\r\n              <span className={classes.wording}>Velocity</span>\r\n              <span className={classes.stat}>\r\n                {pitchingPlayerAverages.velocity\r\n                  ? pitchingPlayerAverages.velocity.toFixed(0)\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`flex-col ${classes.averagesContainer}`}>\r\n      <span className={classes.title}>\r\n        Team {toggleHitting ? \"Hitting\" : \"Pitching\"} Averages\r\n      </span>\r\n      <button className={classes.btn} onClick={onToggleTeamAveragesHandler}>\r\n        {toggleHitting ? \"Show Pitching Averages\" : \"Show Hitting Averages\"}\r\n      </button>\r\n      <div className={`flex-c ${classes.contentContainer}`}>{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamAverages;\r\n","C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\PositionPlayerStats.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\displayStats\\PitcherPlayerStats.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\comparePlayers\\PlayerComparison.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\comparePlayers\\Player.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\data\\data.js",[],"C:\\Users\\jpf40\\OneDrive\\Documents\\Jeremiah's\\Web Development\\projects\\mlbShowApp\\mlbshowapp\\src\\components\\errorMessage\\ErrorMessageBar.js",["182"],"import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./ErrorMessageBar.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst ErrorMessageBar = () => {\r\n  const [showError, setShowError] = useState(false);\r\n  const errorMessage = useSelector((state) => state.errorMessage);\r\n  const dispatch = useDispatch();\r\n\r\n  const showErrorMessage = () => {\r\n    setShowError(true);\r\n    setTimeout(() => {\r\n      setShowError(false);\r\n      dispatch({ type: \"errorMessage\", message: \"\" });\r\n    }, 5000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    showErrorMessage();\r\n  }, [errorMessage]);\r\n\r\n  return (\r\n    showError &&\r\n    errorMessage.length > 0 && (\r\n      <div className={classes.errorBar}>\r\n        <p className={classes.errorMsg}>{errorMessage}</p>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ErrorMessageBar;\r\n",{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":29,"column":6,"nodeType":"191","endLine":29,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":18,"column":7,"nodeType":"195","messageId":"196","endLine":18,"endColumn":10},{"ruleId":"197","severity":2,"message":"198","line":9,"column":10,"nodeType":"199","messageId":"200","endLine":9,"endColumn":14},{"ruleId":"197","severity":2,"message":"198","line":10,"column":10,"nodeType":"199","messageId":"200","endLine":10,"endColumn":14},{"ruleId":"197","severity":2,"message":"198","line":11,"column":10,"nodeType":"199","messageId":"200","endLine":11,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":7,"column":7,"nodeType":"203","messageId":"204","endLine":11,"endColumn":8,"fix":"205"},{"ruleId":"193","severity":1,"message":"206","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":21},{"ruleId":"193","severity":1,"message":"207","line":7,"column":23,"nodeType":"195","messageId":"196","endLine":7,"endColumn":34},{"ruleId":"193","severity":1,"message":"208","line":1,"column":28,"nodeType":"195","messageId":"196","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"209","line":16,"column":6,"nodeType":"191","endLine":16,"endColumn":8,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":21,"column":29,"nodeType":"213","messageId":"214","endLine":21,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":26,"column":31,"nodeType":"213","messageId":"214","endLine":26,"endColumn":38},{"ruleId":"193","severity":1,"message":"215","line":1,"column":27,"nodeType":"195","messageId":"196","endLine":1,"endColumn":36},{"ruleId":"193","severity":1,"message":"216","line":16,"column":12,"nodeType":"195","messageId":"196","endLine":16,"endColumn":20},{"ruleId":"189","severity":1,"message":"209","line":16,"column":6,"nodeType":"191","endLine":16,"endColumn":8,"suggestions":"217"},{"ruleId":"211","severity":1,"message":"212","line":20,"column":29,"nodeType":"213","messageId":"214","endLine":20,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":25,"column":31,"nodeType":"213","messageId":"214","endLine":25,"endColumn":38},{"ruleId":"189","severity":1,"message":"209","line":16,"column":6,"nodeType":"191","endLine":16,"endColumn":8,"suggestions":"218"},{"ruleId":"211","severity":1,"message":"212","line":21,"column":29,"nodeType":"213","messageId":"214","endLine":21,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":26,"column":31,"nodeType":"213","messageId":"214","endLine":26,"endColumn":38},{"ruleId":"189","severity":1,"message":"209","line":15,"column":6,"nodeType":"191","endLine":15,"endColumn":8,"suggestions":"219"},{"ruleId":"211","severity":1,"message":"212","line":19,"column":29,"nodeType":"213","messageId":"214","endLine":19,"endColumn":36},{"ruleId":"193","severity":1,"message":"206","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"193","severity":1,"message":"207","line":2,"column":23,"nodeType":"195","messageId":"196","endLine":2,"endColumn":34},{"ruleId":"193","severity":1,"message":"220","line":1,"column":27,"nodeType":"195","messageId":"196","endLine":1,"endColumn":38},{"ruleId":"193","severity":1,"message":"207","line":2,"column":23,"nodeType":"195","messageId":"196","endLine":2,"endColumn":34},{"ruleId":"189","severity":1,"message":"221","line":20,"column":6,"nodeType":"191","endLine":20,"endColumn":55,"suggestions":"222"},{"ruleId":"189","severity":1,"message":"223","line":20,"column":6,"nodeType":"191","endLine":20,"endColumn":20,"suggestions":"224"},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],["225"],["226"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["227"],"no-unused-vars","'app' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-undef","'Link' is not defined.","JSXIdentifier","undefined","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"228","text":"229"},"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["230"],"array-callback-return","Array.prototype.some() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useEffect' is defined but never used.","'selected' is assigned a value but never used.",["231"],["232"],["233"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'calcHittingAverages' and 'calcPitchingAverages'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'showErrorMessage'. Either include it or remove the dependency array.",["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},[265,265]," rel=\"noreferrer\"",{"desc":"238","fix":"239"},{"desc":"238","fix":"240"},{"desc":"238","fix":"241"},{"desc":"238","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [getData]",{"range":"247","text":"248"},"Update the dependencies array to be: [dispatch]",{"range":"249","text":"250"},{"range":"251","text":"250"},{"range":"252","text":"250"},{"range":"253","text":"250"},"Update the dependencies array to be: [lineup, rotation, bench, bullpen, toggleHitting, calcHittingAverages, calcPitchingAverages]",{"range":"254","text":"255"},"Update the dependencies array to be: [errorMessage, showErrorMessage]",{"range":"256","text":"257"},[949,951],"[getData]",[533,535],"[dispatch]",[535,537],[529,531],[473,475],[784,833],"[lineup, rotation, bench, bullpen, toggleHitting, calcHittingAverages, calcPitchingAverages]",[600,614],"[errorMessage, showErrorMessage]"]